// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvaPub.Repository;

#nullable disable

namespace ProvaPub.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20250818165816_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lorene Friesen"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Esther Cronin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Angelica Tromp"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brittany Wunsch"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Edgar Gislason"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Elvira Goyette"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Katrina Rodriguez"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Mable Kuvalis"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Beverly Cassin"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Clinton Jacobson"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Heather King"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Ethel Huel"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Veronica Hodkiewicz"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Christopher Ernser"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Nicole Ebert"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ryan Blanda"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sandra Huel"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Carlos Kuvalis"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Aubrey Ernser"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Lauren Hills"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProvaPub.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Refined Steel Table"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Handmade Soft Tuna"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ergonomic Rubber Car"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Incredible Fresh Mouse"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gorgeous Frozen Fish"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Small Concrete Fish"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tasty Cotton Cheese"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Rustic Rubber Pants"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Handcrafted Plastic Chips"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gorgeous Concrete Tuna"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Small Cotton Bike"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Practical Cotton Hat"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Unbranded Metal Cheese"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Rustic Cotton Pizza"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Tasty Frozen Car"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Intelligent Plastic Hat"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Licensed Metal Chips"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Unbranded Frozen Mouse"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Licensed Cotton Table"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Sleek Fresh Sausages"
                        });
                });

            modelBuilder.Entity("ProvaPub.Models.RandomNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("ProvaPub.Models.Order", b =>
                {
                    b.HasOne("ProvaPub.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProvaPub.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
